{{- define "path_result_type" -}}
          {{- if .IsPrimitive }}
            {{.PrefixSpace}}type: {{.SwaggerType}}
          {{- else if .IsReference }}
            {{.PrefixSpace}}$ref: '#/definitions/{{.SwaggerType}}'
          {{- else if .IsMap }}
            {{.PrefixSpace}}type: object
            {{.PrefixSpace}}additionalProperties:
          {{- end}}
          {{- if .IsMap}}
            {{- template "path_result_type" .ItemSpec -}}
          {{- else if eq .SwaggerType "array"}}
            {{.PrefixSpace}}items:
             {{- template "path_result_type" .ItemSpec -}}
          {{- end }}
          {{- if .HasFormat }}
            {{.PrefixSpace}}format: {{.Format}}
          {{- end}}
          {{- if .Pointer }}
            {{.PrefixSpace}}x-nullable: true
          {{- end}}
{{- end }}

{{ define "path" }}
paths:
{{- range .Paths}}
  /jsonrpc/{{.RpcPath}}:
    post:
      consumes:
        - application/json
      operationId: {{.RpcServiceMethod}}
      {{- if ne .Description "" }}
      description: "{{.Description}}"
      {{- end }}
      parameters:
        - in: body
          name: ParamList
          required: true
          {{- if ne (len .ParamSpec.Properties) 0 }}
          schema:
            $ref: '#/definitions/{{.ParamSpec.ModelName}}'
          {{- else  }}
          schema:
            type: object
            x-empty-params: true
          {{- end}}
      responses:
        '200':
          description: success
          {{- if .HasRes }}
          schema:
            {{- template "path_result_type" .ResultList }}
          {{- end }}

      tags:
        - {{.ServiceName}}
      produces:
        - application/json

{{end}}
{{end}}